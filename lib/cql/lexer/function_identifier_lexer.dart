import 'package:petitparser/petitparser.dart';

final functionIdentifierLexer = string('after') |
    string('aggregate') |
    string('all') |
    string('and') |
    string('as') |
    string('asc') |
    string('ascending') |
    string('before') |
    string('between') |
    string('by') |
    string('called') |
    string('case') |
    string('cast') |
    string('code') |
    string('Code') |
    string('codesystem') |
    string('codesystems') |
    string('collapse') |
    string('concept') |
    string('Concept') |
    string('contains') |
    string('context') |
    string('convert') |
    string('date') |
    string('day') |
    string('days') |
    string('default') |
    string('define') |
    string('desc') |
    string('descending') |
    string('difference') |
    string('display') |
    string('distinct') |
    string('div') |
    string('duration') |
    string('during') |
    string('else') |
    string('end') |
    string('ends') |
    string('except') |
    string('exists') |
    string('expand') |
    string('false') |
    string('flatten') |
    string('fluent') |
    string('from') |
    string('function') |
    string('hour') |
    string('hours') |
    string('if') |
    string('implies') |
    string('in') |
    string('include') |
    string('includes') |
    string('included in') |
    string('intersect') |
    string('Interval') |
    string('is') |
    string('let') |
    string('library') |
    string('List') |
    string('maximum') |
    string('meets') |
    string('millisecond') |
    string('milliseconds') |
    string('minimum') |
    string('minute') |
    string('minutes') |
    string('mod') |
    string('month') |
    string('months') |
    string('not') |
    string('null') |
    string('occurs') |
    string('of') |
    string('or') |
    string('or after') |
    string('or before') |
    string('or less') |
    string('or more') |
    string('overlaps') |
    string('parameter') |
    string('per') |
    string('point') |
    string('predecessor') |
    string('private') |
    string('properly') |
    string('public') |
    string('return') |
    string('same') |
    string('singleton') |
    string('second') |
    string('seconds') |
    string('start') |
    string('starting') |
    string('starts') |
    string('sort') |
    string('successor') |
    string('such that') |
    string('then') |
    string('time') |
    string('timezoneoffset') |
    string('to') |
    string('true') |
    string('Tuple') |
    string('union') |
    string('using') |
    string('valueset') |
    string('version') |
    string('week') |
    string('weeks') |
    string('where') |
    string('when') |
    string('width') |
    string('with') |
    string('within') |
    string('without') |
    string('xor') |
    string('year') |
    string('years');
